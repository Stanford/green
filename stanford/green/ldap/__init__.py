

class GreenUnknownLDAPAttribute(Exception):
    pass

"""

The following mappings are derived in large-part from the data-definition pages at
https://uit.stanford.edu/service/directory/datadefs/accounts and
https://uit.stanford.edu/service/directory/datadefs/people

However, some attributes in the two trees not listed on those pages have
been added (e.g., suPrivilegeGroup).
"""

ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY = {
    'cn': 'single',
    'description': 'multi',
    'gecos': 'single',
    'gidNumber': 'single',
    'homeDirectory': 'single',
    'krb5PrincipalName': 'single',
    'loginShell': 'single',
    'owner': 'single',
    'seeAlso': 'single',
    'suAccountStatus': 'single',
    'suAfsHomeDirectory': 'single',
    'suAfsStatus': 'single',
    'suAutoreplyAlias': 'multi',
    'suAutoreplyForward': 'single',
    'suAutoreplyMsg': 'single',
    'suAutoreplyStart': 'multi',
    'suAutoreplyStatus': 'single',
    'suAutoreplyStop': 'multi',
    'suAutoreplySubj': 'single',
    'suCreateAgent': 'single',
    'suCreateAPI': 'single',
    'suDescription': 'multi',
    'suDialinStatus': 'single',
    'suEmailAccountType': 'single',
    'suEmailAdmin': 'multi',
    'suEmailQuota': 'single',
    'suEmailStatus': 'single',
    'suEntitlementName': 'multi',
    'suEntitlementStatus': 'single',
    'suEntryStatus': 'single',
    'suIdentifies': 'single',
    'suGuestAltLogin': 'single',
    'suGuestName': 'single',
    'suGuestStatus': 'single',
    'suGuestUuid': 'single',
    'suKerberosStatus': 'single',
    'suKrb4Name': 'multi',
    'suLelandStatus': 'single',
    'suMailDrop': 'multi',
    'suName': 'single',
    'suNameLF': 'single',
    'suPtsStatus': 'single',
    'suPtsUid': 'single',
    'suSeasForward': 'multi',
    'suSeasLocal': 'single',
    'suSeasStatus': 'single',
    'suSeasSunetID': 'multi',
    'suSeasSunetIDPreferred': 'single',
    'SuSeasEmailSystem': 'single',
    'suSeasUriRouteTo': 'single',
    'suService': 'multi',
    'uid': 'single',
    'uidNumber': 'single',
}

# Add some attributes not on the data definition page.
ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY['dn'] = 'single'
ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY['suPrivilegeGroup'] = 'multi'
ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY['suSeasEmailSystem'] = 'single'
ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY['suEmailSMTPEnabled'] = 'single'
ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY['suKerberosPasswordExpiration'] = 'single'

PEOPLE_ATTRIBUTE_TO_MULTIPLICITY = {
    'cn': 'multi',
    'description': 'single',
    'displayName': 'single',
    'facsimileTelephoneNumber': 'single',
    'fax': 'single',
    'generationQualifier': 'single',
    'givenName': 'multi',
    'gn': 'multi',
    'homePhone': 'single',
    'homeTelephoneNumber': 'single',
    'homePostalAddress': 'single',
    'labeledURI': 'single',
    'mail': 'single',
    'rfc822Mailbox': 'single',
    'mobile': 'single',
    'mobileTelephoneNumber': 'single',
    'o': 'single',
    'organizationName': 'single',
    'ou': 'single',
    'organizationalUnitName': 'single',
    'pager': 'single',
    'pagerTelephoneNumber': 'single',
    'personalTitle': 'single',
    'postalAddress': 'single',
    'sn': 'multi',
    'surname': 'multi',
    'street': 'single',
    'streetAddress': 'single',
    'suAffiliation': 'multi',
    'suAffilJobCode': 'multi',
    'suAffilJobDescription': 'multi',
    'suAffilStandardHours': 'multi',
    'suCardNumber': 'single',
    'suCN': 'multi',
    'suDisplayAffiliation': 'multi',
    'suDisplayNameFirst': 'single',
    'suDisplayNameLast': 'single',
    'suDisplayNameLF': 'single',
    'suDisplayNameMiddle': 'single',
    'suDisplayNamePrefix': 'single',
    'suDisplayNameSuffix': 'single',
    'suEmailPager': 'single',
    'suFacultyAppointment': 'single',
    'suFacultyAppointmentShort': 'single',
    'suGeneralID': 'multi',
    'suGivenName, suGN': 'multi',
    'suGwAffilAddress1': 'single',
    'suGwAffilAddress2': 'single',
    'suGwAffilAddress3': 'single',
    'suGwAffilAddress4': 'single',
    'suGwAffilAddress5': 'single',
    'suGwAffiliation': 'multi',
    'suGwAffiliation1': 'single',
    'suGwAffiliation2': 'single',
    'suGwAffiliation3': 'single',
    'suGwAffiliation4': 'single',
    'suGwAffiliation5': 'single',
    'suGwAffilCode': 'multi',
    'suGwAffilCode1': 'single',
    'suGwAffilCode2': 'single',
    'suGwAffilCode3': 'single',
    'suGwAffilCode4': 'single',
    'suGwAffilCode5': 'single',
    'suGwAffilDate1': 'single',
    'suGwAffilDate2': 'single',
    'suGwAffilDate3': 'single',
    'suGwAffilDate4': 'single',
    'suGwAffilDate5': 'single',
    'suGwAffilFax1': 'multi',
    'suGwAffilFax2': 'multi',
    'suGwAffilFax3': 'multi',
    'suGwAffilFax4': 'multi',
    'suGwAffilFax5': 'multi',
    'suGwAffilInternalPager': 'multi',
    'suGwAffilMailCode1': 'single',
    'suGwAffilMailCode2': 'single',
    'suGwAffilMailCode3': 'single',
    'suGwAffilMailCode4': 'single',
    'suGwAffilMailCode5': 'single',
    'suGwAffilMobile': 'multi',
    'suGwAffilPager': 'multi',
    'suGwAffilPhone1': 'multi',
    'suGwAffilPhone2': 'multi',
    'suGwAffilPhone3': 'multi',
    'suGwAffilPhone4': 'multi',
    'suGwAffilPhone5': 'multi',
    'suLocalAddress': 'single',
    'suLocalPhone': 'single',
    'suMailAddress': 'single',
    'suMailCode': 'single',
    'suOtherName': 'multi',
    'suOu': 'multi',
    'suPermanentAddress': 'single',
    'suPermanentPhone': 'single',
    'suPrimaryOrganizationID': 'single',
    'suPrimaryOrganizationName': 'single',
    'suPrivilegeGroup': 'multi',
    'suProfile': 'single',
    'suProxyCardNumber': 'single',
    'suRegID': 'single',
    'suRegisteredName': 'single',
    'suRegisteredNameLF': 'single',
    'suResidenceCode': 'single',
    'suResidenceName': 'single',
    'suResidenceRequiredAttribute': 'multi',
    'suResidenceRoom': 'single',
    'suResidencePhone': 'single',
    'suResidenceTSO': 'single',
    'suSearchID': 'multi',
    'suSN': 'multi',
    'suStanfordEndDate': 'single',
    'suStudentType': 'multi',
    'suSunetID': 'multi',
    'suUniqueIdentifier': 'single',
    'suUnivID': 'single',
    'suVisibAffilAddress1': 'single',
    'suVisibAffilAddress2': 'single',
    'suVisibAffilAddress3': 'single',
    'suVisibAffilAddress4': 'single',
    'suVisibAffilAddress5': 'single',
    'suVisibAffiliation': 'multi',
    'suVisibAffiliation1': 'single',
    'suVisibAffiliation2': 'single',
    'suVisibAffiliation3': 'single',
    'suVisibAffiliation4': 'single',
    'suVisibAffiliation5': 'single',
    'suVisibAffilFax1': 'single',
    'suVisibAffilFax2': 'single',
    'suVisibAffilFax3': 'single',
    'suVisibAffilFax4': 'single',
    'suVisibAffilFax5': 'single',
    'suVisibAffilInternalPager': 'multi',
    'suVisibAffilMobile': 'multi',
    'suVisibAffilPager': 'multi',
    'suVisibAffilPhone1': 'single',
    'suVisibAffilPhone2': 'single',
    'suVisibAffilPhone3': 'single',
    'suVisibAffilPhone4': 'single',
    'suVisibAffilPhone5': 'single',
    'suVisibEmail': 'single',
    'suVisibFacsimileTelephoneNumber': 'single',
    'suVisibGwAffilCode': 'multi',
    'suVisibHomeAddress': 'single',
    'suVisibHomePage': 'single',
    'suVisibHomePhone': 'single',
    'suVisibIdentity': 'single',
    'suVisibLocalAddress': 'single',
    'suVisibLocalPhone': 'single',
    'suVisibMailAddress': 'single',
    'suVisibMailCode': 'single',
    'suVisibMobilePhone': 'single',
    'suVisibPagerEmail': 'single',
    'suVisibPagerPhone': 'single',
    'suVisibPermanentAddress': 'single',
    'suVisibPermanentPhone': 'single',
    'suVisibProfile': 'single',
    'suVisibStreet': 'single',
    'suVisibSunetID': 'single',
    'suVisibTelephoneNumber': 'single',
    'telephoneNumber': 'multi',
    'title': 'single',
    'uid': 'single',
    'userid': 'single',
}

# Add in the suGAL attributes. These attributes have the same multiplicty
# as the attributes they are derived from.
SUGAL_BASE_ATTRIBUTES = {
    'cn',
    'displayName',
    'generationQualifier',
    'givenName',
    'personalTitle',
    'sn',
    'suDisplayNameFirst',
    'suDisplayNameLast',
    'suDisplayNameLF',
    'suDisplayNameMiddle',
    'suDisplayNamePrefix',
    'suDisplayNameSuffix',
    'suFacultyAppointment',
    'suFacultyAppointmentShort',
    'suOtherName',
    'suRegID',
    'suUniqueIdentifier',
    'uid',
    'suEmailPager',
    'facsimileTelephoneNumber',
    'homePhone',
    'homePostalAddress',
    'postalAddress',
    'street',
    'labeledURI',
    'mail',
    'mobile',
    'pager',
    'suLocalAddress',
    'suResidenceRoom',
    'suLocalPhone',
    'suResidencePhone',
    'suMailAddress',
    'suPermanentAddress',
    'suPermanentPhone',
    'suSearchID',
    'suSunetID',
    'telephoneNumber',
}

SUGAL_ATTRIBUTE_TO_MULTIPLICITY = {}
for attribute_name in SUGAL_BASE_ATTRIBUTES:
    SUGAL_ATTRIBUTE_TO_MULTIPLICITY[f"suGAL{attribute_name}"] = PEOPLE_ATTRIBUTE_TO_MULTIPLICITY[attribute_name]

PEOPLE_ATTRIBUTE_TO_MULTIPLICITY_EXTRA = {
    'dn': 'single',
    'suGALsuRegID': 'single',
    'suSunetIDPreferred': 'single',
    'eduPersonOrgDN': 'single',
    'eduPersonPrincipalName': 'single',
    'eduPersonScopedAffiliation': 'single',
    'eduPersonPrimaryAffiliation': 'single',
    'eduPersonAffiliation': 'single',
    'eduPersonUniqueId': 'single',
    'eduPersonPrimaryOrgUnitDN': 'single',
    'eduPersonOrgUnitDN': 'single',
    'suOU': 'multi',
    'suMobileID': 'single',
    'suGivenName': 'multi',
}

PEOPLE_ATTRIBUTE_TO_MULTIPLICITY |= SUGAL_ATTRIBUTE_TO_MULTIPLICITY
PEOPLE_ATTRIBUTE_TO_MULTIPLICITY |= PEOPLE_ATTRIBUTE_TO_MULTIPLICITY_EXTRA

def account_attribute_is_single_valued(attribute_name: str) -> bool:
    if (attribute_name in ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY):
        return (ACCOUNT_ATTRIBUTE_TO_MULTIPLICITY[attribute_name] == 'single')
    else:
        msg = f"'{attribute_name}' is not an account-tree attribute"
        raise GreenUnknownLDAPAttribute(msg)

def account_attribute_is_multi_valued(attribute_name: str) -> bool:
    return not account_attribute_is_single_valued(attribute_name)

def people_attribute_is_single_valued(attribute_name: str) -> bool:
    if (attribute_name in PEOPLE_ATTRIBUTE_TO_MULTIPLICITY):
        return (PEOPLE_ATTRIBUTE_TO_MULTIPLICITY[attribute_name] == 'single')
    else:
        msg = f"'{attribute_name}' is not a people-tree attribute"
        raise GreenUnknownLDAPAttribute(msg)

def people_attribute_is_multi_valued(attribute_name: str) -> bool:
    return not people_attribute_is_single_valued(attribute_name)
